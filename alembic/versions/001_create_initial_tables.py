
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Создаем таблицу зданий
    op.create_table('buildings',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('address', sa.String(), nullable=False),
                    sa.Column('latitude', sa.Float(), nullable=False),
                    sa.Column('longitude', sa.Float(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('ix_buildings_id', 'buildings', ['id'], unique=False)
    op.create_index('ix_buildings_address', 'buildings', ['address'], unique=False)

    # Создаем таблицу видов деятельности
    op.create_table('activities',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('parent_id', sa.Integer(), nullable=True),
                    sa.Column('level', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['parent_id'], ['activities.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('ix_activities_id', 'activities', ['id'], unique=False)
    op.create_index('ix_activities_name', 'activities', ['name'], unique=False)

    # Создаем таблицу организаций
    op.create_table('organizations',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('phone_numbers', postgresql.ARRAY(sa.String()), nullable=True),
                    sa.Column('building_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('ix_organizations_id', 'organizations', ['id'], unique=False)
    op.create_index('ix_organizations_name', 'organizations', ['name'], unique=False)

    # Создаем промежуточную таблицу для связи организаций и видов деятельности
    op.create_table('organization_activity',
                    sa.Column('organization_id', sa.Integer(), nullable=False),
                    sa.Column('activity_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
                    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
                    sa.PrimaryKeyConstraint('organization_id', 'activity_id')
                    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('organization_activity')
    op.drop_index('ix_organizations_name', table_name='organizations')
    op.drop_index('ix_organizations_id', table_name='organizations')
    op.drop_table('organizations')
    op.drop_index('ix_activities_name', table_name='activities')
    op.drop_index('ix_activities_id', table_name='activities')
    op.drop_table('activities')
    op.drop_index('ix_buildings_address', table_name='buildings')
    op.drop_index('ix_buildings_id', table_name='buildings')
    op.drop_table('buildings')
