"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json
from datetime import datetime
import os

API_KEY = "your-secret-api-key-here"
BASE_URL = "http://localhost:8000"
HEADERS = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json"
}


def backup_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö"""
    backup_data = {
        "timestamp": datetime.now().isoformat(),
        "buildings": [],
        "organizations": []
    }

    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö...")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–¥–∞–Ω–∏—è
    try:
        response = requests.get(f"{BASE_URL}/buildings", headers=HEADERS)
        if response.status_code == 200:
            backup_data["buildings"] = response.json()
            print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∑–¥–∞–Ω–∏–π: {len(backup_data['buildings'])}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–¥–∞–Ω–∏–π: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–¥–∞–Ω–∏–π: {e}")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (—á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫ –ø–æ –ø—É—Å—Ç–æ–º—É –Ω–∞–∑–≤–∞–Ω–∏—é)
    try:
        response = requests.get(f"{BASE_URL}/organizations/search/by-name?name=&limit=1000", headers=HEADERS)
        if response.status_code == 200:
            organizations = response.json()
            backup_data["organizations"] = organizations
            print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: {len(organizations)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: {e}")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    filename = f"backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(backup_data, f, ensure_ascii=False, indent=2)

    print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {filename}")
    return filename


def list_backups():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π"""
    backup_files = [f for f in os.listdir('..') if f.startswith('backup_') and f.endswith('.json')]
    backup_files.sort(reverse=True)  # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)

    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:")
    for i, filename in enumerate(backup_files, 1):
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        date_str = filename.replace('backup_', '').replace('.json', '')
        try:
            date_obj = datetime.strptime(date_str, '%Y%m%d_%H%M%S')
            formatted_date = date_obj.strftime('%Y-%m-%d %H:%M:%S')
            print(f"{i}. {filename} ({formatted_date})")
        except ValueError:
            print(f"{i}. {filename}")

    return backup_files


def show_backup_info(filename):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            backup_data = json.load(f)

        print(f"\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {filename}")
        print(f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {backup_data.get('timestamp', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"–ó–¥–∞–Ω–∏–π: {len(backup_data.get('buildings', []))}")
        print(f"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: {len(backup_data.get('organizations', []))}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
        if backup_data.get('buildings'):
            print("\n–ü—Ä–∏–º–µ—Ä—ã –∑–¥–∞–Ω–∏–π:")
            for building in backup_data['buildings'][:3]:
                print(f"  - {building['address']}")

        if backup_data.get('organizations'):
            print("\n–ü—Ä–∏–º–µ—Ä—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π:")
            for org in backup_data['organizations'][:3]:
                print(f"  - {org['name']}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")


if __name__ == "__main__":
    import sys

    if len(sys.argv) > 1:
        if sys.argv[1] == "backup":
            backup_data()
        elif sys.argv[1] == "list":
            list_backups()
        elif sys.argv[1] == "info":
            if len(sys.argv) > 2:
                show_backup_info(sys.argv[2])
            else:
                backups = list_backups()
                if backups:
                    show_backup_info(backups[0])
                else:
                    print("–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python backup_restore.py backup     - —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é")
        print("  python backup_restore.py list       - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–ø–∏–π")
        print("  python backup_restore.py info <—Ñ–∞–π–ª>- –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ø–∏–∏")